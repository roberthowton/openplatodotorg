---
// Source: https://github.com/raffazizzi/astro-tei/blob/bfb46d2dce80abf31cab174aae78b0cc401701b9/packages/core/src/Tei.astro
import TeiStyle from "../styles/tei-style.astro";
import { type ProcessedTei } from "../utils/processTei.ts";
export interface Props {
  useBehaviors?: boolean;
  teiData: ProcessedTei;
}

let { teiData, useBehaviors = true } = Astro.props;

// Expand self-closing elements
const tei = teiData.serialized.replace(
  /<([^\s\/]+)([^>]*?)\/>/gm,
  "<$1$2></$1>",
);
---

<script>
  import { customBehaviors } from "../utils";

  const root = document.querySelector("#__astrotei") as HTMLElement;
  const teiDom = root.firstChild as HTMLElement;

  if (root.dataset.usebehaviors === "true") {
    const CETEI = (await import("CETEIcean")).default;
    const ceteicean = new CETEI();
    ceteicean.addBehaviors({
      tei: {
        ...customBehaviors,
      },
    });
    ceteicean.els = root.dataset.elements?.split(",");
    ceteicean.utilities.dom = teiDom;
    ceteicean.applyBehaviors();
  }
  root.style.display = "block";
</script>

<div
  id="__astrotei"
  set:html={tei}
  data-usebehaviors={useBehaviors.toString()}
  data-elements={teiData.elements.toString()}
  style="display: none;"
/>

<TeiStyle />
